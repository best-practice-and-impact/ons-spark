cell_no,execution_count,tidy_python_output,r_output
1,1,"+--------------------------------+--------+-------+
|animal_group                    |cal_year|cost   |
+--------------------------------+--------+-------+
|Snake                           |2018    |333.0  |
|Deer                            |2015    |1788.0 |
|Unknown - Domestic Animal Or Pet|2017    |2622.0 |
|Bird                            |2012    |32240.0|
|Hedgehog                        |2009    |520.0  |
+--------------------------------+--------+-------+
only showing top 5 rows
","# A tibble: 5 × 3
  animal_group                     cal_year  cost
  <chr>                               <int> <dbl>
1 Dog                                  2018 34507
2 Horse                                2013 11890
3 Squirrel                             2011  1040
4 Fox                                  2017 12124
5 Unknown - Domestic Animal Or Pet     2015  9217
"
4,2,"+------------+--------+----+
|animal_group|cal_year|cost|
+------------+--------+----+
+------------+--------+----+
","# A tibble: 0 × 3
# … with 3 variables: animal_group <chr>, cal_year <int>, cost <dbl>
"
7,3,"Distinct animal count: 27
Distinct year count: 11
","[1] ""Distinct animal count: 27""
[1] ""Distinct year count: 11""
"
10,4,,
13,5,"297
","[1] 297
"
16,6,"+------------+--------+
|animal_group|cal_year|
+------------+--------+
|        Bird|    2009|
|        Bird|    2010|
|        Bird|    2011|
|        Bird|    2012|
|        Bird|    2013|
|        Bird|    2014|
|        Bird|    2015|
|        Bird|    2016|
|        Bird|    2017|
|        Bird|    2018|
|        Bird|    2019|
|      Budgie|    2009|
|      Budgie|    2010|
|      Budgie|    2011|
|      Budgie|    2012|
+------------+--------+
only showing top 15 rows
","# A tibble: 15 × 2
   animal_group cal_year
   <chr>           <int>
 1 Bird             2009
 2 Bird             2010
 3 Bird             2011
 4 Bird             2012
 5 Bird             2013
 6 Bird             2014
 7 Bird             2015
 8 Bird             2016
 9 Bird             2017
10 Bird             2018
11 Bird             2019
12 Budgie           2009
13 Budgie           2010
14 Budgie           2011
15 Budgie           2012
"
19,7,"+--------------------+--------+-------+
|        animal_group|cal_year|   cost|
+--------------------+--------+-------+
|                Deer|    2015| 1788.0|
|               Snake|    2018|  333.0|
|Unknown - Animal ...|    2011|   null|
|                Goat|    2013|   null|
|                Bird|    2012|32240.0|
|            Hedgehog|    2009|  520.0|
|               Sheep|    2013|   null|
|Unknown - Domesti...|    2017| 2622.0|
|              Ferret|    2017|   null|
|               Horse|    2012|16120.0|
+--------------------+--------+-------+
only showing top 10 rows
","# A tibble: 10 × 3
   animal_group cal_year  cost
   <chr>           <int> <dbl>
 1 Bird             2009 25095
 2 Budgie           2009    NA
 3 Bird             2010 27300
 4 Budgie           2010    NA
 5 Bird             2011 36140
 6 Budgie           2011   260
 7 Bird             2012 32240
 8 Budgie           2012    NA
 9 Bird             2013 26350
10 Budgie           2013    NA
"
22,8,"+------------+--------+------+
|animal_group|cal_year|  cost|
+------------+--------+------+
|     Hamster|    2009|   0.0|
|     Hamster|    2010| 780.0|
|     Hamster|    2011| 780.0|
|     Hamster|    2012|   0.0|
|     Hamster|    2013| 870.0|
|     Hamster|    2014| 295.0|
|     Hamster|    2015|   0.0|
|     Hamster|    2016|1630.0|
|     Hamster|    2017|   0.0|
|     Hamster|    2018|   0.0|
|     Hamster|    2019|   0.0|
+------------+--------+------+
","# A tibble: 11 × 3
   animal_group cal_year  cost
   <chr>           <int> <dbl>
 1 Hamster          2009     0
 2 Hamster          2010   780
 3 Hamster          2011   780
 4 Hamster          2012     0
 5 Hamster          2013   870
 6 Hamster          2014   295
 7 Hamster          2015     0
 8 Hamster          2016  1630
 9 Hamster          2017     0
10 Hamster          2018     0
11 Hamster          2019     0
"
25,9,"'Detected implicit cartesian product for LEFT OUTER join between logical plans\nRange (0, 5, step=1, splits=Some(2))\nand\nProject [animal_noise#203]\n+- Filter (isnotnull(animal_group#202) && (Dog = animal_group#202))\n   +- LogicalRDD [animal_group#202, animal_noise#203], false\nJoin condition is missing or trivial.\nEither: use the CROSS JOIN syntax to allow cartesian products between these\nrelations, or: enable implicit cartesian products by setting the configuration\nvariable spark.sql.crossJoin.enabled=true;'
",
27,10,"+------------+---+------------+
|animal_group| id|animal_noise|
+------------+---+------------+
|         Dog|  0|        Woof|
|         Dog|  1|        Woof|
|         Dog|  2|        Woof|
|         Dog|  3|        Woof|
|         Dog|  4|        Woof|
+------------+---+------------+
",
29,11,,"Deleted file:///home/cdsw/ons-spark/checkpoints
"
