cell_no,execution_count,tidy_python_output,r_output
1,1,,
4,2,"+---------------+--------+------------+-----------------+
|incident_number|cal_year|animal_group|postcode_district|
+---------------+--------+------------+-----------------+
|         139091|    2009|         Dog|             SE19|
|         275091|    2009|         Fox|             SE25|
|        2075091|    2009|         Dog|              SM5|
|        2872091|    2009|       Horse|              UB9|
|        3553091|    2009|      Rabbit|              RM3|
+---------------+--------+------------+-----------------+
only showing top 5 rows

+-----------------+----------+
|postcode_district|population|
+-----------------+----------+
|              DH7|     41076|
|              NW3|     52376|
|              NR4|     22331|
|             SO31|     44742|
|             CT18|     14357|
+-----------------+----------+
only showing top 5 rows
","# A tibble: 5 × 4
  incident_number cal_year animal_group postcode_district
  <chr>              <int> <chr>        <chr>            
1 139091              2009 Dog          SE19             
2 275091              2009 Fox          SE25             
3 2075091             2009 Dog          SM5              
4 2872091             2009 Horse        UB9              
5 3553091             2009 Rabbit       RM3              
# A tibble: 5 × 2
  postcode_district population
  <chr>                  <dbl>
1 DH7                    41076
2 NW3                    52376
3 NR4                    22331
4 SO31                   44742
5 CT18                   14357
"
7,3,"+-----------------+---------------+--------+--------------------+----------+
|postcode_district|incident_number|cal_year|        animal_group|population|
+-----------------+---------------+--------+--------------------+----------+
|             SE17|        6259091|    2009|Unknown - Domesti...|     32866|
|             SE17|        6317091|    2009|                 Cat|     32866|
|             SE17|       17297091|    2009|                 Dog|     32866|
|             SE17|       74801101|    2010|            Squirrel|     32866|
|             SE17|       64851111|    2011|                 Dog|     32866|
+-----------------+---------------+--------+--------------------+----------+
only showing top 5 rows
","# A tibble: 5 × 5
  incident_number cal_year animal_group postcode_district population
  <chr>              <int> <chr>        <chr>                  <dbl>
1 93474091            2009 Dog          DA15                   29123
2 194165091           2009 Cat          DA15                   29123
3 126259101           2010 Cat          DA15                   29123
4 154461131           2013 Dog          DA15                   29123
5 36130141            2014 Bird         DA15                   29123
"
10,4,"== Physical Plan ==
*(5) Project [postcode_district#65, incident_number#62, cal_year#63, animal_group#64, population#71L]
+- SortMergeJoin [postcode_district#65], [postcode_district#70], LeftOuter
   :- *(2) Sort [postcode_district#65 ASC NULLS FIRST], false, 0
   :  +- Exchange hashpartitioning(postcode_district#65, 200)
   :     +- *(1) Project [IncidentNumber#10 AS incident_number#62, CalYear#12 AS cal_year#63, AnimalGroupParent#20 AS animal_group#64, PostcodeDistrict#31 AS postcode_district#65]
   :        +- *(1) FileScan csv [IncidentNumber#10,CalYear#12,AnimalGroupParent#20,PostcodeDistrict#31] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/home/cdsw/ons-spark/ons-spark/data/animal_rescue.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<IncidentNumber:string,CalYear:int,AnimalGroupParent:string,PostcodeDistrict:string>
   +- *(4) Sort [postcode_district#70 ASC NULLS FIRST], false, 0
      +- Exchange hashpartitioning(postcode_district#70, 200)
         +- *(3) Project [postcode_district#70, population#71L]
            +- *(3) Filter isnotnull(postcode_district#70)
               +- *(3) FileScan parquet [postcode_district#70,population#71L] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/home/cdsw/ons-spark/ons-spark/data/population.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(postcode_district)], ReadSchema: struct<postcode_district:string,population:bigint>
","<SQL>
SELECT `incident_number`, `cal_year`, `animal_group`, `LHS`.`postcode_district` AS `postcode_district`, `population`
FROM (SELECT `IncidentNumber` AS `incident_number`, `CalYear` AS `cal_year`, `AnimalGroupParent` AS `animal_group`, `PostcodeDistrict` AS `postcode_district`
FROM `animal_rescue_1d547e21_8254_46be_98e2_a9ded90863f4`) `LHS`
LEFT JOIN `population_ab8b048d_9812_4304_9e43_c5ceed0e937a` AS `RHS`
ON (`LHS`.`postcode_district` = `RHS`.`postcode_district`)


<PLAN>
plan
1 == Physical Plan ==\n*(5) Project [incident_number#1180, cal_year#1181, animal_group#1182, postcode_district#1183, population#783L]\n+- SortMergeJoin [postcode_district#1183], [postcode_district#782], LeftOuter\n   :- *(2) Sort [postcode_district#1183 ASC NULLS FIRST], false, 0\n   :  +- Exchange hashpartitioning(postcode_district#1183, 32)\n   :     +- *(1) Project [IncidentNumber#71 AS incident_number#1180, CalYear#73 AS cal_year#1181, AnimalGroupParent#81 AS animal_group#1182, PostcodeDistrict#92 AS postcode_district#1183]\n   :        +- InMemoryTableScan [AnimalGroupParent#81, CalYear#73, IncidentNumber#71, PostcodeDistrict#92]\n   :              +- InMemoryRelation [IncidentNumber#71, DateTimeOfCall#72, CalYear#73, FinYear#74, TypeOfIncident#75, PumpCount#76, PumpHoursTotal#77, HourlyNotionalCostGBP#78, IncidentNotionalCostGBP#79, FinalDescription#80, AnimalGroupParent#81, OriginofCall#82, PropertyType#83, PropertyCategory#84, SpecialServiceTypeCategory#85, SpecialServiceType#86, WardCode#87, Ward#88, BoroughCode#89, Borough#90, StnGroundName#91, PostcodeDistrict#92, Easting_m#93, Northing_m#94, ... 2 more fields], StorageLevel(disk, memory, deserialized, 1 replicas)\n   :                    +- *(1) Project [IncidentNumber#19, DateTimeOfCall#20, CalYear#21, FinYear#22, TypeOfIncident#23, PumpCount#24, PumpHoursTotal#25, HourlyNotionalCost(£)#26 AS HourlyNotionalCostGBP#78, IncidentNotionalCost(£)#27 AS IncidentNotionalCostGBP#79, FinalDescription#28, AnimalGroupParent#29, OriginofCall#30, PropertyType#31, PropertyCategory#32, SpecialServiceTypeCategory#33, SpecialServiceType#34, WardCode#35, Ward#36, BoroughCode#37, Borough#38, StnGroundName#39, PostcodeDistrict#40, Easting_m#41, Northing_m#42, ... 2 more fields]\n   :                       +- *(1) FileScan csv [IncidentNumber#19,DateTimeOfCall#20,CalYear#21,FinYear#22,TypeOfIncident#23,PumpCount#24,PumpHoursTotal#25,HourlyNotionalCost(£)#26,IncidentNotionalCost(£)#27,FinalDescription#28,AnimalGroupParent#29,OriginofCall#30,PropertyType#31,PropertyCategory#32,SpecialServiceTypeCategory#33,SpecialServiceType#34,WardCode#35,Ward#36,BoroughCode#37,Borough#38,StnGroundName#39,PostcodeDistrict#40,Easting_m#41,Northing_m#42,... 2 more fields] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/home/cdsw/ons-spark/ons-spark/data/animal_rescue.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<IncidentNumber:string,DateTimeOfCall:string,CalYear:int,FinYear:string,TypeOfIncident:stri...\n   +- *(4) Sort [postcode_district#782 ASC NULLS FIRST], false, 0\n      +- Exchange hashpartitioning(postcode_district#782, 32)\n         +- *(3) Filter isnotnull(postcode_district#782)\n            +- InMemoryTableScan [postcode_district#782, population#783L], [isnotnull(postcode_district#782)]\n                  +- InMemoryRelation [postcode_district#782, population#783L], StorageLevel(disk, memory, deserialized, 1 replicas)\n                        +- *(1) FileScan parquet [postcode_district#782,population#783L] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/home/cdsw/ons-spark/ons-spark/data/population.parquet], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<postcode_district:string,population:bigint>
"
13,5,"+-----------------+---------------+--------+------------+----------+
|postcode_district|incident_number|cal_year|animal_group|population|
+-----------------+---------------+--------+------------+----------+
|             SE19|         139091|    2009|         Dog|     27639|
|             SE25|         275091|    2009|         Fox|     34521|
|              SM5|        2075091|    2009|         Dog|     38291|
|              UB9|        2872091|    2009|       Horse|     14336|
|              RM3|        3553091|    2009|      Rabbit|     40272|
+-----------------+---------------+--------+------------+----------+
only showing top 5 rows
","# A tibble: 5 × 5
  incident_number cal_year animal_group postcode_district population
  <chr>              <int> <chr>        <chr>                  <dbl>
1 139091              2009 Dog          SE19                   27639
2 275091              2009 Fox          SE25                   34521
3 2075091             2009 Dog          SM5                    38291
4 2872091             2009 Horse        UB9                    14336
5 3553091             2009 Rabbit       RM3                    40272
"
16,6,"== Physical Plan ==
*(2) Project [postcode_district#65, incident_number#62, cal_year#63, animal_group#64, population#71L]
+- *(2) BroadcastHashJoin [postcode_district#65], [postcode_district#70], LeftOuter, BuildRight
   :- *(2) Project [IncidentNumber#10 AS incident_number#62, CalYear#12 AS cal_year#63, AnimalGroupParent#20 AS animal_group#64, PostcodeDistrict#31 AS postcode_district#65]
   :  +- *(2) FileScan csv [IncidentNumber#10,CalYear#12,AnimalGroupParent#20,PostcodeDistrict#31] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/home/cdsw/ons-spark/ons-spark/data/animal_rescue.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<IncidentNumber:string,CalYear:int,AnimalGroupParent:string,PostcodeDistrict:string>
   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]))
      +- *(1) Project [postcode_district#70, population#71L]
         +- *(1) Filter isnotnull(postcode_district#70)
            +- *(1) FileScan parquet [postcode_district#70,population#71L] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/home/cdsw/ons-spark/ons-spark/data/population.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(postcode_district)], ReadSchema: struct<postcode_district:string,population:bigint>
","<SQL>
SELECT `incident_number`, `cal_year`, `animal_group`, `LHS`.`postcode_district` AS `postcode_district`, `population`
FROM (SELECT `IncidentNumber` AS `incident_number`, `CalYear` AS `cal_year`, `AnimalGroupParent` AS `animal_group`, `PostcodeDistrict` AS `postcode_district`
FROM `animal_rescue_23ea78f1_9e82_4e2b_8c62_0b227629103d`) `LHS`
LEFT JOIN `sparklyr_tmp_7da9aaa4_584b_4195_8306_26d69b044ab0` AS `RHS`
ON (`LHS`.`postcode_district` = `RHS`.`postcode_district`)


<PLAN>
plan
1 == Physical Plan ==\n*(2) Project [incident_number#1505, cal_year#1506, animal_group#1507, postcode_district#1508, population#783L]\n+- *(2) BroadcastHashJoin [postcode_district#1508], [postcode_district#782], LeftOuter, BuildRight\n   :- *(2) Project [IncidentNumber#71 AS incident_number#1505, CalYear#73 AS cal_year#1506, AnimalGroupParent#81 AS animal_group#1507, PostcodeDistrict#92 AS postcode_district#1508]\n   :  +- InMemoryTableScan [AnimalGroupParent#81, CalYear#73, IncidentNumber#71, PostcodeDistrict#92]\n   :        +- InMemoryRelation [IncidentNumber#71, DateTimeOfCall#72, CalYear#73, FinYear#74, TypeOfIncident#75, PumpCount#76, PumpHoursTotal#77, HourlyNotionalCostGBP#78, IncidentNotionalCostGBP#79, FinalDescription#80, AnimalGroupParent#81, OriginofCall#82, PropertyType#83, PropertyCategory#84, SpecialServiceTypeCategory#85, SpecialServiceType#86, WardCode#87, Ward#88, BoroughCode#89, Borough#90, StnGroundName#91, PostcodeDistrict#92, Easting_m#93, Northing_m#94, ... 2 more fields], StorageLevel(disk, memory, deserialized, 1 replicas)\n   :              +- *(1) Project [IncidentNumber#19, DateTimeOfCall#20, CalYear#21, FinYear#22, TypeOfIncident#23, PumpCount#24, PumpHoursTotal#25, HourlyNotionalCost(£)#26 AS HourlyNotionalCostGBP#78, IncidentNotionalCost(£)#27 AS IncidentNotionalCostGBP#79, FinalDescription#28, AnimalGroupParent#29, OriginofCall#30, PropertyType#31, PropertyCategory#32, SpecialServiceTypeCategory#33, SpecialServiceType#34, WardCode#35, Ward#36, BoroughCode#37, Borough#38, StnGroundName#39, PostcodeDistrict#40, Easting_m#41, Northing_m#42, ... 2 more fields]\n   :                 +- *(1) FileScan csv [IncidentNumber#19,DateTimeOfCall#20,CalYear#21,FinYear#22,TypeOfIncident#23,PumpCount#24,PumpHoursTotal#25,HourlyNotionalCost(£)#26,IncidentNotionalCost(£)#27,FinalDescription#28,AnimalGroupParent#29,OriginofCall#30,PropertyType#31,PropertyCategory#32,SpecialServiceTypeCategory#33,SpecialServiceType#34,WardCode#35,Ward#36,BoroughCode#37,Borough#38,StnGroundName#39,PostcodeDistrict#40,Easting_m#41,Northing_m#42,... 2 more fields] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/home/cdsw/ons-spark/ons-spark/data/animal_rescue.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<IncidentNumber:string,DateTimeOfCall:string,CalYear:int,FinYear:string,TypeOfIncident:stri...\n   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]))\n      +- *(1) Filter isnotnull(postcode_district#782)\n         +- InMemoryTableScan [postcode_district#782, population#783L], [isnotnull(postcode_district#782)]\n               +- InMemoryRelation [postcode_district#782, population#783L], StorageLevel(disk, memory, deserialized, 1 replicas)\n                     +- *(1) FileScan parquet [postcode_district#782,population#783L] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/home/cdsw/ons-spark/ons-spark/data/population.parquet], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<postcode_district:string,population:bigint>
"
19,7,,
22,8,,
25,9,"+-----------------+---------------+--------+------------+------------------+----------+
|postcode_district|incident_number|cal_year|animal_group|    origin_of_call|population|
+-----------------+---------------+--------+------------+------------------+----------+
|             SE19|         139091|    2009|         Dog|Person (land line)|     27639|
|             SE25|         275091|    2009|         Fox|Person (land line)|     34521|
|              SM5|        2075091|    2009|         Dog|   Person (mobile)|     38291|
|              UB9|        2872091|    2009|       Horse|   Person (mobile)|     14336|
|              RM3|        3553091|    2009|      Rabbit|   Person (mobile)|     40272|
+-----------------+---------------+--------+------------+------------------+----------+
only showing top 5 rows
","# A tibble: 5 × 6
  incident_number cal_year animal_group postcode_district origin_of_call    
  <chr>              <int> <chr>        <chr>             <chr>             
1 139091              2009 Dog          SE19              Person (land line)
2 275091              2009 Fox          SE25              Person (land line)
3 2075091             2009 Dog          SM5               Person (mobile)   
4 2872091             2009 Horse        UB9               Person (mobile)   
5 3553091             2009 Rabbit       RM3               Person (mobile)   
# … with 1 more variable: population <dbl>
"
28,10,"== Physical Plan ==
*(2) Project [postcode_district#213, incident_number#210, cal_year#211, animal_group#212, origin_of_call#214, population#221L]
+- *(2) BroadcastHashJoin [postcode_district#213], [postcode_district#220], LeftOuter, BuildRight
   :- *(2) Project [IncidentNumber#158 AS incident_number#210, CalYear#160 AS cal_year#211, AnimalGroupParent#168 AS animal_group#212, PostcodeDistrict#179 AS postcode_district#213, OriginofCall#169 AS origin_of_call#214]
   :  +- *(2) FileScan csv [IncidentNumber#158,CalYear#160,AnimalGroupParent#168,OriginofCall#169,PostcodeDistrict#179] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/home/cdsw/ons-spark/ons-spark/data/animal_rescue.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<IncidentNumber:string,CalYear:int,AnimalGroupParent:string,OriginofCall:string,PostcodeDis...
   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]))
      +- *(1) Project [postcode_district#220, population#221L]
         +- *(1) Filter isnotnull(postcode_district#220)
            +- *(1) FileScan parquet [postcode_district#220,population#221L] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/home/cdsw/ons-spark/ons-spark/data/population.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(postcode_district)], ReadSchema: struct<postcode_district:string,population:bigint>
","<SQL>
SELECT `incident_number`, `cal_year`, `animal_group`, `LHS`.`postcode_district` AS `postcode_district`, `origin_of_call`, `population`
FROM (SELECT `IncidentNumber` AS `incident_number`, `CalYear` AS `cal_year`, `AnimalGroupParent` AS `animal_group`, `PostcodeDistrict` AS `postcode_district`, `OriginofCall` AS `origin_of_call`
FROM `animal_rescue_e46fd0c9_28f2_44c3_acdf_235018ad2bc0`) `LHS`
LEFT JOIN `population_24bbb1e6_d041_4faf_8061_d0f1c2fb1c8c` AS `RHS`
ON (`LHS`.`postcode_district` = `RHS`.`postcode_district`)


<PLAN>
plan
1 == Physical Plan ==\n*(2) Project [incident_number#1027, cal_year#1028, animal_group#1029, postcode_district#1030, origin_of_call#1031, population#783L]\n+- *(2) BroadcastHashJoin [postcode_district#1030], [postcode_district#782], LeftOuter, BuildRight\n   :- *(2) Project [IncidentNumber#71 AS incident_number#1027, CalYear#73 AS cal_year#1028, AnimalGroupParent#81 AS animal_group#1029, PostcodeDistrict#92 AS postcode_district#1030, OriginofCall#82 AS origin_of_call#1031]\n   :  +- InMemoryTableScan [AnimalGroupParent#81, CalYear#73, IncidentNumber#71, OriginofCall#82, PostcodeDistrict#92]\n   :        +- InMemoryRelation [IncidentNumber#71, DateTimeOfCall#72, CalYear#73, FinYear#74, TypeOfIncident#75, PumpCount#76, PumpHoursTotal#77, HourlyNotionalCostGBP#78, IncidentNotionalCostGBP#79, FinalDescription#80, AnimalGroupParent#81, OriginofCall#82, PropertyType#83, PropertyCategory#84, SpecialServiceTypeCategory#85, SpecialServiceType#86, WardCode#87, Ward#88, BoroughCode#89, Borough#90, StnGroundName#91, PostcodeDistrict#92, Easting_m#93, Northing_m#94, ... 2 more fields], StorageLevel(disk, memory, deserialized, 1 replicas)\n   :              +- *(1) Project [IncidentNumber#19, DateTimeOfCall#20, CalYear#21, FinYear#22, TypeOfIncident#23, PumpCount#24, PumpHoursTotal#25, HourlyNotionalCost(£)#26 AS HourlyNotionalCostGBP#78, IncidentNotionalCost(£)#27 AS IncidentNotionalCostGBP#79, FinalDescription#28, AnimalGroupParent#29, OriginofCall#30, PropertyType#31, PropertyCategory#32, SpecialServiceTypeCategory#33, SpecialServiceType#34, WardCode#35, Ward#36, BoroughCode#37, Borough#38, StnGroundName#39, PostcodeDistrict#40, Easting_m#41, Northing_m#42, ... 2 more fields]\n   :                 +- *(1) FileScan csv [IncidentNumber#19,DateTimeOfCall#20,CalYear#21,FinYear#22,TypeOfIncident#23,PumpCount#24,PumpHoursTotal#25,HourlyNotionalCost(£)#26,IncidentNotionalCost(£)#27,FinalDescription#28,AnimalGroupParent#29,OriginofCall#30,PropertyType#31,PropertyCategory#32,SpecialServiceTypeCategory#33,SpecialServiceType#34,WardCode#35,Ward#36,BoroughCode#37,Borough#38,StnGroundName#39,PostcodeDistrict#40,Easting_m#41,Northing_m#42,... 2 more fields] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/home/cdsw/ons-spark/ons-spark/data/animal_rescue.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<IncidentNumber:string,DateTimeOfCall:string,CalYear:int,FinYear:string,TypeOfIncident:stri...\n   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]))\n      +- *(1) Filter isnotnull(postcode_district#782)\n         +- InMemoryTableScan [postcode_district#782, population#783L], [isnotnull(postcode_district#782)]\n               +- InMemoryRelation [postcode_district#782, population#783L], StorageLevel(disk, memory, deserialized, 1 replicas)\n                     +- *(1) FileScan parquet [postcode_district#782,population#783L] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/home/cdsw/ons-spark/ons-spark/data/population.parquet], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<postcode_district:string,population:bigint>
"
31,11,"+---------------------+
|origin_of_call       |
+---------------------+
|Coastguard           |
|Person (mobile)      |
|Person (land line)   |
|Other FRS            |
|Not known            |
|Police               |
|Person (running call)|
|Ambulance            |
+---------------------+
","# A tibble: 8 × 1
  origin_of_call       
  <chr>                
1 Person (mobile)      
2 Ambulance            
3 Police               
4 Coastguard           
5 Person (running call)
6 Not known            
7 Person (land line)   
8 Other FRS            
"
34,12,"+---------------------+------------------+
|origin_of_call       |origin_type       |
+---------------------+------------------+
|Coastguard           |Emergency Services|
|Police               |Emergency Services|
|Ambulance            |Emergency Services|
|Other FRS            |Emergency Services|
|Person (mobile)      |Member of Public  |
|Person (land line)   |Member of Public  |
|Person (running call)|Member of Public  |
|Not known            |null              |
+---------------------+------------------+
","# A tibble: 8 × 2
  origin_of_call        origin_type       
  <chr>                 <chr>             
1 Coastguard            Emergency Services
2 Police                Emergency Services
3 Ambulance             Emergency Services
4 Other FRS             Emergency Services
5 Person (mobile)       Member of Public  
6 Person (land line)    Member of Public  
7 Person (running call) Member of Public  
8 Not known             <NA>              
"
37,13,"+------------------+----------------+--------+--------------------------------+-----------------+------------------+
|origin_of_call    |incident_number |cal_year|animal_group                    |postcode_district|origin_type       |
+------------------+----------------+--------+--------------------------------+-----------------+------------------+
|Other FRS         |000014-03092018M|2018    |Unknown - Heavy Livestock Animal|CR8              |Emergency Services|
|Person (mobile)   |000099-01012017 |2017    |Dog                             |BR2              |Member of Public  |
|Person (land line)|000260-01012017 |2017    |Bird                            |CR0              |Member of Public  |
|Person (mobile)   |000375-01012017 |2017    |Dog                             |TW8              |Member of Public  |
|Person (mobile)   |000477-01012017 |2017    |Deer                            |HA7              |Member of Public  |
+------------------+----------------+--------+--------------------------------+-----------------+------------------+
only showing top 5 rows
","# A tibble: 5 × 6
  incident_number  cal_year animal_group        postcode_distri… origin_of_call 
  <chr>               <int> <chr>               <chr>            <chr>          
1 000014-03092018M     2018 Unknown - Heavy Li… CR8              Other FRS      
2 000099-01012017      2017 Dog                 BR2              Person (mobile)
3 000260-01012017      2017 Bird                CR0              Person (land l…
4 000375-01012017      2017 Dog                 TW8              Person (mobile)
5 000477-01012017      2017 Deer                HA7              Person (mobile)
# … with 1 more variable: origin_type <chr>
"
40,14,"+----------------+--------+--------------------------------+-----------------+------------------+------------------+
|incident_number |cal_year|animal_group                    |postcode_district|origin_of_call    |origin_type       |
+----------------+--------+--------------------------------+-----------------+------------------+------------------+
|000014-03092018M|2018    |Unknown - Heavy Livestock Animal|CR8              |Other FRS         |Emergency Services|
|000099-01012017 |2017    |Dog                             |BR2              |Person (mobile)   |Member of Public  |
|000260-01012017 |2017    |Bird                            |CR0              |Person (land line)|Member of Public  |
|000375-01012017 |2017    |Dog                             |TW8              |Person (mobile)   |Member of Public  |
|000477-01012017 |2017    |Deer                            |HA7              |Person (mobile)   |Member of Public  |
+----------------+--------+--------------------------------+-----------------+------------------+------------------+
only showing top 5 rows
","# A tibble: 5 × 6
  incident_number  cal_year animal_group        postcode_distri… origin_of_call 
  <chr>               <int> <chr>               <chr>            <chr>          
1 000014-03092018M     2018 Unknown - Heavy Li… CR8              Other FRS      
2 000099-01012017      2017 Dog                 BR2              Person (mobile)
3 000260-01012017      2017 Bird                CR0              Person (land l…
4 000375-01012017      2017 Dog                 TW8              Person (mobile)
5 000477-01012017      2017 Deer                HA7              Person (mobile)
# … with 1 more variable: origin_type <chr>
"
42,15,"== Physical Plan ==
*(1) Project [IncidentNumber#158 AS incident_number#210, CalYear#160 AS cal_year#211, AnimalGroupParent#168 AS animal_group#212, PostcodeDistrict#179 AS postcode_district#213, OriginofCall#169 AS origin_of_call#214, CASE WHEN (substring(OriginofCall#169, 1, 6) = Person) THEN Member of Public WHEN OriginofCall#169 IN (Coastguard,Police,Ambulance,Other FRS) THEN Emergency Services WHEN (OriginofCall#169 = Not known) THEN null ELSE null END AS origin_type#301]
+- *(1) FileScan csv [IncidentNumber#158,CalYear#160,AnimalGroupParent#168,OriginofCall#169,PostcodeDistrict#179] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/home/cdsw/ons-spark/ons-spark/data/animal_rescue.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<IncidentNumber:string,CalYear:int,AnimalGroupParent:string,OriginofCall:string,PostcodeDis...
","<SQL>
SELECT `incident_number`, `cal_year`, `animal_group`, `postcode_district`, `origin_of_call`, CASE
WHEN (SUBSTR(`origin_of_call`, 1, 6) = ""Person"") THEN (""Member of Public"")
WHEN (`origin_of_call` IN (""Coastguard"", ""Police"", ""Ambulance"", ""Other FRS"")) THEN (""Emergency Services"")
WHEN (`origin_of_call` = ""Not known"") THEN (NULL)
ELSE (NULL)
END AS `origin_type`
FROM (SELECT `IncidentNumber` AS `incident_number`, `CalYear` AS `cal_year`, `AnimalGroupParent` AS `animal_group`, `PostcodeDistrict` AS `postcode_district`, `OriginofCall` AS `origin_of_call`
FROM `animal_rescue_7426fd08_0750_40d0_ac73_c9ddf9de52dc`) `q01`

<PLAN>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   plan
1 == Physical Plan ==\n*(1) Project [IncidentNumber#71 AS incident_number#1752, CalYear#73 AS cal_year#1753, AnimalGroupParent#81 AS animal_group#1754, PostcodeDistrict#92 AS postcode_district#1755, OriginofCall#82 AS origin_of_call#1756, CASE WHEN (substring(OriginofCall#82, 1, 6) = Person) THEN Member of Public WHEN OriginofCall#82 IN (Coastguard,Police,Ambulance,Other FRS) THEN Emergency Services WHEN (OriginofCall#82 = Not known) THEN null ELSE null END AS origin_type#1757]\n+- InMemoryTableScan [AnimalGroupParent#81, CalYear#73, IncidentNumber#71, OriginofCall#82, PostcodeDistrict#92]\n      +- InMemoryRelation [IncidentNumber#71, DateTimeOfCall#72, CalYear#73, FinYear#74, TypeOfIncident#75, PumpCount#76, PumpHoursTotal#77, HourlyNotionalCostGBP#78, IncidentNotionalCostGBP#79, FinalDescription#80, AnimalGroupParent#81, OriginofCall#82, PropertyType#83, PropertyCategory#84, SpecialServiceTypeCategory#85, SpecialServiceType#86, WardCode#87, Ward#88, BoroughCode#89, Borough#90, StnGroundName#91, PostcodeDistrict#92, Easting_m#93, Northing_m#94, ... 2 more fields], StorageLevel(disk, memory, deserialized, 1 replicas)\n            +- *(1) Project [IncidentNumber#19, DateTimeOfCall#20, CalYear#21, FinYear#22, TypeOfIncident#23, PumpCount#24, PumpHoursTotal#25, HourlyNotionalCost(£)#26 AS HourlyNotionalCostGBP#78, IncidentNotionalCost(£)#27 AS IncidentNotionalCostGBP#79, FinalDescription#28, AnimalGroupParent#29, OriginofCall#30, PropertyType#31, PropertyCategory#32, SpecialServiceTypeCategory#33, SpecialServiceType#34, WardCode#35, Ward#36, BoroughCode#37, Borough#38, StnGroundName#39, PostcodeDistrict#40, Easting_m#41, Northing_m#42, ... 2 more fields]\n               +- *(1) FileScan csv [IncidentNumber#19,DateTimeOfCall#20,CalYear#21,FinYear#22,TypeOfIncident#23,PumpCount#24,PumpHoursTotal#25,HourlyNotionalCost(£)#26,IncidentNotionalCost(£)#27,FinalDescription#28,AnimalGroupParent#29,OriginofCall#30,PropertyType#31,PropertyCategory#32,SpecialServiceTypeCategory#33,SpecialServiceType#34,WardCode#35,Ward#36,BoroughCode#37,Borough#38,StnGroundName#39,PostcodeDistrict#40,Easting_m#41,Northing_m#42,... 2 more fields] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/home/cdsw/ons-spark/ons-spark/data/animal_rescue.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<IncidentNumber:string,DateTimeOfCall:string,CalYear:int,FinYear:string,TypeOfIncident:stri...
"
